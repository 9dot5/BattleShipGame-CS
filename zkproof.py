import subprocess
import ast

def generate_proof(fleet_positions, nonce):
    zokrates_input = ' '.join(str(pos) for ship in fleet_positions.values() for pos in ship) + ' ' + str(nonce)
    with open("input.txt", "w") as file:
        file.write(zokrates_input)

    subprocess.run(["zokrates", "compile", "-i", "proofs.zok"])
    subprocess.run(["zokrates", "setup"])
    subprocess.run(["zokrates", "compute-witness", "-a", zokrates_input])
    subprocess.run(["zokrates", "generate-proof"])

    with open("proof.json", "r") as file:
        proof = file.read()
    return proof

def verify_proof(proof):
    with open("proof.json", "w") as file:
        file.write(proof)
    result = subprocess.run(["zokrates", "verify"], capture_output=True, text=True)
    return "Proof is valid" in result.stdout

# Read the fleet positions from the file generated by Battleship.py
with open("fleet_positions.txt", "r") as file:
    lines = file.readlines()
    fleet_positions = ast.literal_eval(lines[0])
    nonce = int(lines[1])

proof = generate_proof(fleet_positions, nonce)
print("Generated Proof:", proof)

is_valid = verify_proof(proof)
print("Proof verification result:", is_valid)
